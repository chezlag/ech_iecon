# json2stata.py

"""
Convert a JSON model specification in first shell argument to a Stata
do-file, storing dictionary entries in globals.

Require the JSON file to contain a single, non-nested, dictionary.

Simply write its entries as Stata globals to the target file (second
shell argument).
"""

import sys
import json
import pathlib

# Comment to ease debugging process
print("Converting json parameters to Stata globals")
print("Input (.json):", sys.argv[1])
print("Output (.do):", sys.argv[2])

# Preamble to do-file
STATA_MODEL_COMMENT = """//
// Configuration for:
//    {model_name}
//
// Automatically generated by snakemake, do not change!
//
// Adjust parameters in:
//    {infile_path}
//\n\n\n"""

infile = pathlib.Path(sys.argv[1])
outfile = pathlib.Path(sys.argv[2])

# load json file and set model name from input filename
model_pars = json.load(open(infile))
model_name = infile.stem

# define target content to write in output file
tgt_content = STATA_MODEL_COMMENT.format(model_name=model_name, infile_path=infile)
for key, val in sorted(model_pars.items()):
    # Adjust for Stata string notation
    if isinstance(val, str):
        val = f'"{val}"'
    tgt_content += f"global {key} = {val}\n"

# write content in outfile
outfile.write_text(tgt_content)